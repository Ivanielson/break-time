{"version":3,"sources":["components/InputTime.jsx","components/InputTimeText.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputTime","this","props","minutes","seconds","handleChage","className","name","value","onChange","type","id","max","min","placeholder","React","Component","InputTimeText","addZero","newValue","start","stop","App","handleInputChange","target","setState","parseFloat","Math","round","toFixed","showTime","state","prevState","time","inputTime","startTime","setIntervalID","setInterval","stopTime","clearInterval","alert","onClick","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8636185b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputTime extends React.Component {\n  render() {\n    const { minutes, seconds, handleChage } = this.props;\n    return (\n    <div className=\"input-group mb-2\">\n        <input\n          className=\"form-control\"\n          name=\"minutes\"\n          value={ minutes }\n          onChange={ handleChage }\n          type=\"number\"\n          id=\"input-min\"\n          max=\"59\"\n          min=\"0\"\n          placeholder=\"min\"\n        />\n        <span className=\"input-group-text bg-success text-white\">M</span>\n        <input\n          className=\"form-control\"\n          name=\"seconds\"\n          value={ seconds }\n          onChange={ handleChage }\n          type=\"number\"\n          id=\"input-sec\"\n          max=\"59\"\n          min=\"0\"\n          placeholder=\"sec\"\n        />\n        <span className=\"input-group-text bg-success text-white\">s</span>\n    </div>\n    );\n  }\n}\n\nInputTime.propTypes = {\n  minutes: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n  handleChage: PropTypes.func.isRequired,\n};\n\nexport default InputTime;\n","import React from 'react';\n\nclass InputTimeText extends React.Component {\n\n  componentDidMount() {\n    const { minutes, seconds, start, stop } = this.props;\n    if (minutes > 0 || seconds > 0) {\n      start();\n    } else if(minutes === 0 && seconds === 0) {\n      stop();\n    }\n  }\n\n  componentWillUnmount() {\n    const { stop } = this.props;\n    stop();\n  }\n\n  addZero = (value) => {\n    let newValue = '';\n    if (value < 10) {\n      newValue = `0${value}`;\n    }\n    return newValue;\n  }\n\n  render() {\n    const { minutes, seconds } = this.props;\n    return (\n      <p className=\"digital-time text-success mb-4\">Time\n        <span className=\"time\">{ minutes < 10 ? `0${minutes}` : minutes }:{ seconds < 10 ? `0${seconds}` : seconds }</span>\n      </p>\n    );\n  }\n}\n\nexport default InputTimeText;\n","import React from 'react';\nimport './App.css';\nimport InputTime from './components/InputTime';\nimport InputTimeText from './components/InputTimeText';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap-icons/font/bootstrap-icons.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      time: false,\n      inputTime: true,\n    }\n  }\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: parseFloat(Math.round(value).toFixed(2)) });\n  }\n\n  showTime = () => {\n    const { minutes, seconds } = this.state;\n    if (minutes > 0 || seconds > 0) {\n      this.setState((prevState) => ({\n        time: !prevState.time,\n        inputTime: !prevState.inputTime,\n      }));\n    }\n  }\n\n  startTime = () => {\n    const ONE_SECOND = 1000;\n    this.setIntervalID = setInterval(() => {\n      this.setState((prevState) => ({\n        seconds: prevState.seconds - 1,\n      }));\n    }, ONE_SECOND);\n  }\n\n  stopTime = () => {\n    clearInterval(this.setIntervalID);\n    this.setState({\n      minutes: 0,\n      seconds: 0,\n      time: false,\n      inputTime: true,\n    });\n    return alert(\"Time Encerrado!!\");\n  }\n\n  componentDidUpdate() {\n    const { minutes, seconds } = this.state;\n    if (minutes > 0 && seconds === 0) {\n      this.setState((prevState) => ({\n        minutes: prevState.minutes - 1,\n        seconds: 59,\n      }));\n    }\n  }\n\n  render() {\n    const { minutes, seconds, time, inputTime } = this.state;\n    return (\n      <main className=\"container\">\n        <div className=\"break-time\">\n          <p className=\"title-break text-success\">Break</p>\n          <p className=\"title-time text-success\">Tme</p>\n        </div>\n          <section className=\"input-time\">\n            { time && (minutes > 0 || seconds > 0) ? <InputTimeText stop={ this.stopTime } start={ this.startTime } minutes={ minutes } seconds={ seconds } /> : \"\" }\n            {inputTime ? <InputTime minutes={ minutes } seconds={ seconds } handleChage={ this.handleInputChange } /> : \"\"}\n          <button className=\"btn btn-success\" onClick={ this.showTime }>\n            {time ? <i class=\"bi bi-stop-circle\"> Stop</i> : <i class=\"bi bi-watch\"> Start</i>}\n          </button>\n          </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}